<?php namespace ProcessWire;

/**
 *
 * Inputfield Select Image
 *
 * @author Robin Sallis
 *
 * ProcessWire 3.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class InputfieldSelectImage extends InputfieldSelect {

	public static function getModuleInfo() {
		return array(
			'title' => 'Select Image',
			'summary' => 'Extended version of select, showing image thumbnail.',
			'version' => '0.1.4',
			'author' => 'Robin Sallis',
			'href' => 'https://github.com/Toutouwai/FieldtypeSelectImage',
			'icon' => 'image',
			'requires' => 'FieldtypeSelectImage',
		);
	}

	/**
	 * Render and return the output for this Select
	 */
	public function ___render() {
		$this->checkDefaultValue();
		$attrs = $this->getAttributes();
		unset($attrs['value']);

		$out = "\n<select " . $this->getAttributesString($attrs) . ">\n" .
			$this->renderOptions($this->options) .
			"\n</select>\n<div class='selected-thumb'></div>";

		return $out;
	}

	/**
	 * Returns whether the provided value is selected
	 */
	public function isOptionSelected($value) {
		// We want $value to be only the image name
		list(,$value) = explode("|", $value, 2);

		$valueAttr = $this->attr('value');
		if(empty($valueAttr)) {
			// No value set yet, check if it's set in any of the option attributes
			$selected = false;
			if(isset($this->optionAttributes[$value])) {
				$attrs = $this->optionAttributes[$value];
				if(!empty($attrs['selected']) || !empty($attrs['checked'])) $selected = true;

			}
			if($selected) return true;
		}

		if($this instanceof InputfieldHasArrayValue) {
			return in_array($value, $this->attr('value'));
		}

		return "$value" == (string) $this->value;
	}

}
